image: docker.slock.it/build-images/node:10-alpine

stages:
  - build
  - package
  - deploy

# Job templates
.ui-build: 
  stage: build
  tags:
    - short-jobs
  script:
    - sh /prepare.sh
    - yarn install
    - cp deploy-configs/config.$CHAIN.json src/new-config.json
    - jq ".version = \"$CI_COMMIT_REF_NAME\"" src/new-config.json > src/config.json
    - yarn run build
  artifacts:
    name: build-${CHAIN}
    paths:
      - build/

.docker-package: 
  stage: package
  tags:
    - short-jobs
  image: docker
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:${CHAIN}-${CI_COMMIT_REF_NAME} .
    - docker push $CI_REGISTRY_IMAGE:${CHAIN}-${CI_COMMIT_REF_NAME}



.deploy-tmpl:
  stage: deploy
  except:
    - branches
  tags:
    - short-jobs
  image: docker.slock.it/build-images/deployment
  services:
    - docker:dind
  script:
    - rancher -w up -d --prune -p -s voting-ui-${TARGET} -c --force-upgrade
    - sentry-cli releases new -p voting-ui voting-ui@${CI_COMMIT_REF_NAME}
    - sentry-cli releases deploys voting-ui@${CI_COMMIT_REF_NAME} new -e ${TARGET}
    - sentry-cli releases set-commits --auto voting-ui@${CI_COMMIT_REF_NAME}

ui-for-stage:
  extends: .ui-build
  variables:
    CHAIN: goerli

docker-for-stage:
  extends: .docker-package
  dependencies:
    - ui-for-stage
  variables:
    TARGET: stage
    CHAIN: goerli


ui-for-production:
  extends: .ui-build
  variables:
    CHAIN: mainnet

docker-for-production:
  extends: .docker-package
  dependencies:
    - ui-for-production
  variables:
    TARGET: production
    CHAIN: mainnet


deploy-to-stage:
    extends: .deploy-tmpl
    dependencies:
      - docker-for-stage
    only:
      - /^v[0-9]+.[0-9]+.[0-9]+-(alpha|beta|rc)\.[0-9]+$/
    variables:
      TARGET: stage

deploy-to-production:
    extends: .deploy-tmpl
    dependencies:
      - docker-for-production
    only:
      - /^v[0-9]+.[0-9]+.[0-9]+$/
    variables:
      TARGET: production

